{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"User List\", -1 /* HOISTED */);\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Name\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"Email\"), /*#__PURE__*/_createElementVNode(\"th\", null, \" Actions\")])], -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createElementVNode(\"table\", null, [_hoisted_2, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.users, user => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: user.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(user.id), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.name), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(user.email), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_hoisted_2","_Fragment","_renderList","$data","users","user","key","id","_toDisplayString","name","email"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\components\\TableData.vue"],"sourcesContent":["<template>\r\n  <div >\r\n    <h1>User List</h1>\r\n    <table>\r\n      <thead>\r\n        <tr>\r\n          <th>ID</th>\r\n          <th>Name</th>\r\n          <th>Email</th>\r\n          <th> Actions</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"user in users\" :key=\"user.id\">\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.name }}</td>\r\n          <td>{{ user.email }}</td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'App',\r\n  data() {\r\n    return {\r\n      users: [\r\n        { id: 1, name: 'John Doe', email: 'john@example.com' },\r\n        { id: 2, name: 'Jane Smith', email: 'jane@example.com' },\r\n        { id: 3, name: 'Alice Johnson', email: 'alice@example.com' },\r\n      ],\r\n    };\r\n  },\r\n};\r\n</script>"],"mappings":";gCAEIA,mBAAA,CAAkB,YAAd,WAAS;gCAEXA,mBAAA,CAOQ,gB,aANNA,mBAAA,CAKK,a,aAJHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAa,YAAT,MAAI,G,aACRA,mBAAA,CAAc,YAAV,OAAK,G,aACTA,mBAAA,CAAiB,YAAb,UAAQ,E;;uBARpBC,mBAAA,CAmBM,cAlBJC,UAAkB,EAClBF,mBAAA,CAgBQ,gBAfNG,UAOQ,EACRH,mBAAA,CAMQ,iB,kBALNC,mBAAA,CAIKG,SAAA,QAjBbC,WAAA,CAa2BC,KAAA,CAAAC,KAAK,EAAbC,IAAI;yBAAfP,mBAAA,CAIK;MAJsBQ,GAAG,EAAED,IAAI,CAACE;QACnCV,mBAAA,CAAsB,YAAAW,gBAAA,CAAfH,IAAI,CAACE,EAAE,kBACdV,mBAAA,CAAwB,YAAAW,gBAAA,CAAjBH,IAAI,CAACI,IAAI,kBAChBZ,mBAAA,CAAyB,YAAAW,gBAAA,CAAlBH,IAAI,CAACK,KAAK,iB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
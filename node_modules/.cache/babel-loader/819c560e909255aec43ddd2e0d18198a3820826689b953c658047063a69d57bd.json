{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Table Management\", -1 /* HOISTED */);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_table_view = _resolveComponent(\"table-view\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_hoisted_1, _createVNode(_component_table_view, {\n    entries: $data.entries,\n    onAdd: $options.addEntry,\n    onUpdate: $options.updateEntry,\n    onDelete: $options.deleteEntry\n  }, null, 8 /* PROPS */, [\"entries\", \"onAdd\", \"onUpdate\", \"onDelete\"])]);\n}","map":{"version":3,"names":["_createElementVNode","_createElementBlock","_hoisted_1","_createVNode","_component_table_view","entries","$data","onAdd","$options","addEntry","onUpdate","updateEntry","onDelete","deleteEntry"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\components\\TableManagement.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <h2>Table Management</h2>\r\n      <table-view :entries=\"entries\" @add=\"addEntry\" @update=\"updateEntry\" @delete=\"deleteEntry\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import TableView from './components/TableView.vue';\r\n  import { dummyData } from '../data.js';\r\n  \r\n  export default {\r\n    components: {\r\n      TableView,\r\n    },\r\n    data() {\r\n      return {\r\n        entries: dummyData,\r\n      };\r\n    },\r\n    methods: {\r\n      addEntry(newEntry) {\r\n        // Add new entry to data\r\n        this.entries.push(newEntry);\r\n      },\r\n      updateEntry(updatedEntry) {\r\n        // Update existing entry in data\r\n        const index = this.entries.findIndex(entry => entry.id === updatedEntry.id);\r\n        if (index !== -1) {\r\n          this.entries.splice(index, 1, updatedEntry);\r\n        }\r\n      },\r\n      deleteEntry(id) {\r\n        // Delete entry from data\r\n        this.entries = this.entries.filter(entry => entry.id !== id);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";gCAEMA,mBAAA,CAAyB,YAArB,kBAAgB;;;uBADtBC,mBAAA,CAGM,cAFJC,UAAyB,EACzBC,YAAA,CAA6FC,qBAAA;IAAhFC,OAAO,EAAEC,KAAA,CAAAD,OAAO;IAAGE,KAAG,EAAEC,QAAA,CAAAC,QAAQ;IAAGC,QAAM,EAAEF,QAAA,CAAAG,WAAW;IAAGC,QAAM,EAAEJ,QAAA,CAAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
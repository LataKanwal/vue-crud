{"ast":null,"code":"export default {\n  props: {\n    users: {\n      type: Array,\n      required: true\n    },\n    pageSize: {\n      type: Number,\n      default: 10\n    }\n  },\n  data() {\n    return {\n      currentPage: 1\n    };\n  },\n  computed: {\n    totalPages() {\n      return Math.ceil(this.users.length / this.pageSize);\n    },\n    paginatedUsers() {\n      const start = (this.currentPage - 1) * this.pageSize;\n      const end = start + this.pageSize;\n      return this.users.slice(start, end);\n    }\n  },\n  methods: {\n    remove(userId, index) {\n      this.$emit('delete', userId, index);\n    },\n    nextPage() {\n      if (this.currentPage < this.totalPages) {\n        this.currentPage++;\n      }\n    },\n    prevPage() {\n      if (this.currentPage > 1) {\n        this.currentPage--;\n      }\n    }\n  }\n};","map":{"version":3,"names":["props","users","type","Array","required","pageSize","Number","default","data","currentPage","computed","totalPages","Math","ceil","length","paginatedUsers","start","end","slice","methods","remove","userId","index","$emit","nextPage","prevPage"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\components\\TableData.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <table class=\"user-table\">\r\n\r\n      <thead>\r\n        <tr>\r\n          <th class=\"checkbox-col\"> SELECT </th>\r\n          <th>ID</th>\r\n          <th>STATUS</th>\r\n          <th>CLIENT</th>\r\n          <th>TOTAL</th>\r\n          <th>ISSUED DATE</th>\r\n          <th>BALANCE</th>\r\n          <th>ACTIONS</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        <tr v-for=\"(user, index) in paginatedUsers\" :key=\"user.id\">\r\n          <td><input type=\"checkbox\"></td>\r\n          <td>{{ user.id }}</td>\r\n          <td>{{ user.status }}</td>\r\n          <td class=\"client-col\">\r\n            <div>{{ user.name }}</div>\r\n            <div>{{ user.email }}</div>\r\n          </td>\r\n          <td>{{ user.total }}</td>\r\n          <td>{{ user.issued_date }}</td>\r\n          <td>{{ user.balance }}</td>\r\n          <td><button @click=\"remove(user.id, index)\">Delete</button></td>\r\n        </tr>\r\n      </tbody>\r\n    </table>\r\n\r\n \r\n    <div class=\"pagination\">\r\n      <button @click=\"prevPage\" :disabled=\"currentPage === 1\">Previous Page</button>\r\n      <span>Page {{ currentPage }} of {{ totalPages }}</span>\r\n      <button @click=\"nextPage\" :disabled=\"currentPage === totalPages\">Next Page</button>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nexport default {\r\n  props: {\r\n    users: {\r\n      type: Array,\r\n      required: true,\r\n    },\r\n    pageSize: {\r\n      type: Number,\r\n      default: 10, \r\n    },\r\n  },\r\n  data() {\r\n    return {\r\n      currentPage: 1,\r\n    };\r\n  },\r\n  computed: {\r\n    totalPages() {\r\n      return Math.ceil(this.users.length / this.pageSize);\r\n    },\r\n    paginatedUsers() {\r\n      const start = (this.currentPage - 1) * this.pageSize;\r\n      const end = start + this.pageSize;\r\n      return this.users.slice(start, end);\r\n    },\r\n  },\r\n  methods: {\r\n    remove(userId, index) {\r\n      this.$emit('delete', userId, index); \r\n    },\r\n    nextPage() {\r\n      if (this.currentPage < this.totalPages) {\r\n        this.currentPage++;\r\n      }\r\n    },\r\n    prevPage() {\r\n      if (this.currentPage > 1) {\r\n        this.currentPage--;\r\n      }\r\n    },\r\n  },\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.user-table {\r\n  width: 100%;\r\n  border-collapse: collapse;\r\n}\r\n\r\n.user-table th,\r\n.user-table td {\r\n  padding: 8px;\r\n  text-align: left;\r\n  border-bottom: 1px solid #ddd;\r\n}\r\n\r\n.user-table th {\r\n  background-color: #f2f2f2;\r\n}\r\n\r\n.user-table .checkbox-col {\r\n  width: 50px; /* Adjust width as needed */\r\n}\r\n\r\n.user-table .client-col div {\r\n  margin-bottom: 4px;\r\n}\r\n\r\n.pagination {\r\n  margin-top: 10px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n}\r\n\r\n.pagination button {\r\n  margin: 0 5px;\r\n}\r\n</style>\r\n"],"mappings":"AA2CA,eAAe;EACbA,KAAK,EAAE;IACLC,KAAK,EAAE;MACLC,IAAI,EAAEC,KAAK;MACXC,QAAQ,EAAE;IACZ,CAAC;IACDC,QAAQ,EAAE;MACRH,IAAI,EAAEI,MAAM;MACZC,OAAO,EAAE;IACX;EACF,CAAC;EACDC,IAAIA,CAAA,EAAG;IACL,OAAO;MACLC,WAAW,EAAE;IACf,CAAC;EACH,CAAC;EACDC,QAAQ,EAAE;IACRC,UAAUA,CAAA,EAAG;MACX,OAAOC,IAAI,CAACC,IAAI,CAAC,IAAI,CAACZ,KAAK,CAACa,MAAK,GAAI,IAAI,CAACT,QAAQ,CAAC;IACrD,CAAC;IACDU,cAAcA,CAAA,EAAG;MACf,MAAMC,KAAI,GAAI,CAAC,IAAI,CAACP,WAAU,GAAI,CAAC,IAAI,IAAI,CAACJ,QAAQ;MACpD,MAAMY,GAAE,GAAID,KAAI,GAAI,IAAI,CAACX,QAAQ;MACjC,OAAO,IAAI,CAACJ,KAAK,CAACiB,KAAK,CAACF,KAAK,EAAEC,GAAG,CAAC;IACrC;EACF,CAAC;EACDE,OAAO,EAAE;IACPC,MAAMA,CAACC,MAAM,EAAEC,KAAK,EAAE;MACpB,IAAI,CAACC,KAAK,CAAC,QAAQ,EAAEF,MAAM,EAAEC,KAAK,CAAC;IACrC,CAAC;IACDE,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAACf,WAAU,GAAI,IAAI,CAACE,UAAU,EAAE;QACtC,IAAI,CAACF,WAAW,EAAE;MACpB;IACF,CAAC;IACDgB,QAAQA,CAAA,EAAG;MACT,IAAI,IAAI,CAAChB,WAAU,GAAI,CAAC,EAAE;QACxB,IAAI,CAACA,WAAW,EAAE;MACpB;IACF;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
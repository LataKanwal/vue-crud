{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TableData = _resolveComponent(\"TableData\");\n  return _openBlock(), _createElementBlock(\"div\", null, [_createVNode(_component_TableData, {\n    users: $data.users,\n    onEdit: $options.editUser,\n    onDelete: $options.deleteUser\n  }, null, 8 /* PROPS */, [\"users\", \"onEdit\", \"onDelete\"])]);\n}","map":{"version":3,"names":["_createElementBlock","_createVNode","_component_TableData","users","$data","onEdit","$options","editUser","onDelete","deleteUser"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\components\\ParentComponent.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <TableData :users=\"users\" @edit=\"editUser\" @delete=\"deleteUser\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import TableData from './TableData.vue';\r\n  import axios from 'axios';\r\n  \r\n  export default {\r\n    components: {\r\n      TableData,\r\n    },\r\n    data() {\r\n      return {\r\n        users: [],\r\n      };\r\n    },\r\n    created() {\r\n      this.fetchUsers();\r\n    },\r\n    methods: {\r\n      async fetchUsers() {\r\n        try {\r\n          const response = await axios.get('https://65f72198b4f842e8088528a5.mockapi.io/users');\r\n          this.users = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching users:', error);\r\n        }\r\n      },\r\n      async editUser(user) {\r\n          await axios.put(`https://65f72198b4f842e8088528a5.mockapi.io/users${user.id}`, user)\r\n      },\r\n      async deleteUser(userId) {\r\n          await axios.delete(`https://65f72198b4f842e8088528a5.mockapi.io/users/${userId}`);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  "],"mappings":";;;uBACIA,mBAAA,CAEM,cADJC,YAAA,CAAkEC,oBAAA;IAAtDC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,MAAI,EAAEC,QAAA,CAAAC,QAAQ;IAAGC,QAAM,EAAEF,QAAA,CAAAG","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
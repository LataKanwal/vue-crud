{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_ParentComponent = _resolveComponent(\"ParentComponent\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createVNode(_component_ParentComponent), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addNewUser && $options.addNewUser(...args))\n  }, \"+ Create Invoice\")]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createVNode","_component_ParentComponent","_createElementVNode","onClick","_cache","args","$options","addNewUser"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <ParentComponent/>\n    <button @click=\"addNewUser\">+ Create Invoice</button>\n  </div>\n</template>\n\n<script>\nimport axios from 'axios';\nimport ParentComponent from './components/ParentComponent.vue';\n\nexport default {\n  name: 'App',\n  components: {\n    ParentComponent,\n  },\n  data() {\n    return {\n      users: [],\n    };\n  },\n  created() {\n    this.fetchUsers();\n  },\n  methods: {\n    fetchUsers() {\n      axios.get('https://api.example.com/users')\n        .then(response => {\n          this.users = response.data;\n        })\n        .catch(error => {\n          console.error('Error fetching users:', error);\n        });\n    },\n    addNewUser() {\n      // This method can be used to add a new user\n      // You can implement your logic to open a modal or navigate to a new page for adding a user\n      console.log('Adding a new user');\n    },\n    editUser(user) {\n      // Handle edit logic here\n      console.log('Editing user:', user);\n    },\n    deleteUser(userId) {\n      // Handle delete logic here\n      console.log('Deleting user with ID:', userId);\n      // You may want to also make an API request to delete the user from the server\n      this.users = this.users.filter(user => user.id !== userId);\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n}\n\n#app button {\n  position: absolute;\n  top: 10px;\n  left: 10px;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,YAAA,CAAkBC,0BAAA,GAClBC,mBAAA,CAAqD;IAA5CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,kBAAgB,E","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
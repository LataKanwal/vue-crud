{"ast":null,"code":"import { createElementVNode as _createElementVNode, resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"app\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_TableData = _resolveComponent(\"TableData\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.addNewUser && $options.addNewUser(...args))\n  }, \"+ Create Invoice\"), _createVNode(_component_TableData, {\n    users: $data.users,\n    onEdit: $options.editUser,\n    onDelete: $options.deleteUser\n  }, null, 8 /* PROPS */, [\"users\", \"onEdit\", \"onDelete\"])]);\n}","map":{"version":3,"names":["id","_createElementBlock","_hoisted_1","_createElementVNode","onClick","_cache","args","$options","addNewUser","_createVNode","_component_TableData","users","$data","onEdit","editUser","onDelete","deleteUser"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\App.vue"],"sourcesContent":["<template>\n  <div id=\"app\">\n    <button @click=\"addNewUser\">+ Create Invoice</button>\n    <TableData :users=\"users\" @edit=\"editUser\" @delete=\"deleteUser\" />\n  </div>\n</template>\n\n<script>\nimport axios from 'axios'; // Remove this import\nimport TableData from './components/TableData.vue';\nimport db from './db.json'; // Import your local db.json file\n\nexport default {\n  name: 'App',\n  components: {\n    TableData,\n  },\n  data() {\n    return {\n      users: [],\n    };\n  },\n  created() {\n    this.fetchUsers();\n  },\n  methods: {\n    fetchUsers() {\n      // Read initial data from local db.json file\n      this.users = db.users;\n    },\n    addNewUser() {\n      // Create a new user object\n      const newUser = {\n        id: this.users.length + 1, // Assign a new ID (assuming IDs are sequential)\n        name: 'New User', // Default name\n        email: 'newuser@example.com', // Default email\n        // Add more properties as needed\n      };\n      // Add the new user to the users array\n      this.users.push(newUser);\n      // Update db.json file with the new user data\n      // You'll need to implement file writing logic here (e.g., using Node.js file system APIs)\n    },\n    editUser(user) {\n      console.log('Editing user:', user);\n      // Logic to edit user data\n      // Update db.json file with the edited user data\n    },\n    deleteUser(userId) {\n      console.log('Deleting user with ID:', userId);\n      // Remove the user from the users array\n      this.users = this.users.filter(user => user.id !== userId);\n      // Update db.json file by removing the user data\n    },\n  },\n};\n</script>\n\n<style>\n#app {\n  font-family: Arial, sans-serif;\n  text-align: center;\n}\n</style>\n"],"mappings":";;EACOA,EAAE,EAAC;AAAK;;;uBAAbC,mBAAA,CAGM,OAHNC,UAGM,GAFJC,mBAAA,CAAqD;IAA5CC,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;KAAE,kBAAgB,GAC5CG,YAAA,CAAkEC,oBAAA;IAAtDC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,MAAI,EAAEN,QAAA,CAAAO,QAAQ;IAAGC,QAAM,EAAER,QAAA,CAAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
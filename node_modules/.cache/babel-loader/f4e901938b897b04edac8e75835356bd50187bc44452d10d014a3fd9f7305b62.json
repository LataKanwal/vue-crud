{"ast":null,"code":"import { resolveComponent as _resolveComponent, createVNode as _createVNode, openBlock as _openBlock, createBlock as _createBlock, createCommentVNode as _createCommentVNode, createElementVNode as _createElementVNode, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  class: \"card\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_AddData = _resolveComponent(\"AddData\");\n  const _component_TableData = _resolveComponent(\"TableData\");\n  const _component_UpdateData = _resolveComponent(\"UpdateData\");\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [_createVNode(_component_AddData, {\n    onAdd: $options.addUser\n  }, null, 8 /* PROPS */, [\"onAdd\"]), _createVNode(_component_TableData, {\n    users: $data.users,\n    onDelete: $options.deleteUser,\n    onEdit: $options.editUser,\n    onView: $options.viewUser\n  }, null, 8 /* PROPS */, [\"users\", \"onDelete\", \"onEdit\", \"onView\"]), $data.selectedUserId ? (_openBlock(), _createBlock(_component_UpdateData, {\n    key: 0,\n    user: $data.selectedUser,\n    onUpdate: $options.updateUser\n  }, null, 8 /* PROPS */, [\"user\", \"onUpdate\"])) : _createCommentVNode(\"v-if\", true)])]);\n}","map":{"version":3,"names":["class","_createElementBlock","_hoisted_1","_createElementVNode","_createVNode","_component_AddData","onAdd","$options","addUser","_component_TableData","users","$data","onDelete","deleteUser","onEdit","editUser","onView","viewUser","selectedUserId","_createBlock","_component_UpdateData","key","user","selectedUser","onUpdate","updateUser","_createCommentVNode"],"sources":["C:\\Users\\nitis\\vuecrud\\src\\components\\ParentComponent.vue"],"sourcesContent":["<template>\r\n  <div class=\"card\">\r\n    <div>\r\n      <AddData @add=\"addUser\"/>\r\n      <TableData :users=\"users\" @delete=\"deleteUser\"  @edit=\"editUser\" @view=\"viewUser\"  />\r\n      \r\n      <UpdateData v-if=\"selectedUserId\" :user=\"selectedUser\" @update=\"updateUser\" />\r\n    \r\n  </div>\r\n  </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import AddData from './AddData.vue';\r\n  import TableData from './TableData.vue';\r\n  import UpdateData from './UpdateData.vue';\r\n  import axios from 'axios';\r\n  import { API_ENDPOINT } from './apiConfig.js';\r\n\r\n  export default {\r\n    components: {\r\n      TableData,\r\n      AddData,\r\n      UpdateData,\r\n    },\r\n    data() {\r\n      return {\r\n        selectedUser: null,\r\n        users: [],\r\n        selectedUserId: null,\r\n     \r\n\r\n      };\r\n    },\r\n    \r\n    created() {\r\n      this.fetchUsers();\r\n    },\r\n    methods: {\r\n\r\n      async fetchUsers() {\r\n        try {\r\n          const response = await axios.get(API_ENDPOINT);\r\n          this.users = response.data;\r\n        } catch (error) {\r\n          console.error('Error fetching users:', error);\r\n        }\r\n      },\r\n\r\n      async addUser(newUser) {\r\n        try {\r\n    const response = await axios.post(API_ENDPOINT, newUser);\r\n    this.users.push(response.data); \r\n    console.log('User added:', response.data);\r\n  } catch (error) {\r\n    console.error('Error adding user:', error);\r\n}\r\n    },\r\n    \r\n    async deleteUser(userId) {\r\n        try {\r\n          await axios.delete(`${API_ENDPOINT}/${userId}`);\r\n          this.users = this.users.filter(user => user.id !== userId);\r\n          console.log('User deleted with ID:', userId);\r\n        } catch (error) {\r\n          console.error('Error deleting user:', error);\r\n        }\r\n      },\r\n      editUser(userId) {\r\n      console.log('Editing user with ID:', userId);\r\n      this.selectedUserId = userId;\r\n      this.selectedUser = this.users.find(user => user.id === userId);\r\n    },\r\n    async updateUser(updatedUser) {\r\n      try {\r\n        const response = await axios.put(`${API_ENDPOINT}/${updatedUser.id}`, updatedUser);\r\n        const index = this.users.findIndex(user => user.id === updatedUser.id);\r\n        if (index !== -1) {\r\n          this.$set(this.users, index, response.data);\r\n        }\r\n        console.log('User updated:', response.data);\r\n      } catch (error) {\r\n        console.error('Error updating user:', error);\r\n      }\r\n      finally{\r\n        this.fetchUsers();\r\n      }\r\n    },\r\n      viewUser(userId) {\r\n      // Find the selected user and set it as 'selectedUser'\r\n      this.selectedUser = this.users.find(user => user.id === userId);\r\n      // Set the 'selectedUserId' to trigger the UpdateData component\r\n      this.selectedUserId = userId;\r\n    },\r\n    },\r\n      \r\n  };\r\n  </script>\r\n\r\n<style>\r\n.page-container {\r\n  display:flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n}\r\n\r\n.create-button {\r\n    background-color: rgb(169, 59, 233); \r\n    color:white;\r\n    padding : 10px;\r\n    font-size: 18px;\r\n    margin: 20px;\r\n    border:none;\r\n    text-decoration: none;\r\n    border-radius: 8px;\r\n\r\n  }\r\n  .add {\r\n  margin-bottom: 20px;\r\n  }\r\n  .card {\r\n\r\n  box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);\r\n  transition: 0.3s;\r\n}\r\n  </style>\r\n  "],"mappings":";;EACOA,KAAK,EAAC;AAAM;;;;;uBAAjBC,mBAAA,CAQM,OARNC,UAQM,GAPJC,mBAAA,CAMI,cALFC,YAAA,CAAyBC,kBAAA;IAAfC,KAAG,EAAEC,QAAA,CAAAC;EAAO,oCACtBJ,YAAA,CAAqFK,oBAAA;IAAzEC,KAAK,EAAEC,KAAA,CAAAD,KAAK;IAAGE,QAAM,EAAEL,QAAA,CAAAM,UAAU;IAAIC,MAAI,EAAEP,QAAA,CAAAQ,QAAQ;IAAGC,MAAI,EAAET,QAAA,CAAAU;sEAEtDN,KAAA,CAAAO,cAAc,I,cAAhCC,YAAA,CAA8EC,qBAAA;IANpFC,GAAA;IAMyCC,IAAI,EAAEX,KAAA,CAAAY,YAAY;IAAGC,QAAM,EAAEjB,QAAA,CAAAkB;mDANtEC,mBAAA,e","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}